#include <stdio.h>

#define MAX 100

void insertAtPosition(int arr[], int *size, int element, int position) {
    if (*size >= MAX) {
        printf("Array is full! Cannot insert.\n");
        return;
    }
    
    if (position < 0 || position > *size) {
        printf("Invalid position!\n");
        return;
    }

    // Shift elements to the right
    for (int i = *size; i > position; i--) {
        arr[i] = arr[i - 1];
    }
    
    arr[position] = element;
    (*size)++;

    printf("Inserted %d at position %d.\n", element, position);
}

void deleteAtPosition(int arr[], int *size, int position) {
    if (*size == 0) {
        printf("Array is empty! Cannot delete.\n");
        return;
    }

    if (position < 0 || position >= *size) {
        printf("Invalid position!\n");
        return;
    }

    printf("Deleted element %d from position %d.\n", arr[position], position);

    // Shift elements to the left
    for (int i = position; i < *size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    
    (*size)--;
}

void displayArray(int arr[], int size) {
    printf("Array elements: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[MAX];
    int size = 0;
    int choice, element, position;

    while (1) {
        printf("\n1. Insert\n2. Delete\n3. Display\n4. Exit\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element to insert: ");
                scanf("%d", &element);
                printf("Enter position to insert (0-based index): ");
                scanf("%d", &position);
                insertAtPosition(arr, &size, element, position);
                break;
            case 2:
                printf("Enter position to delete (0-based index): ");
                scanf("%d", &position);
                deleteAtPosition(arr, &size, position);
                break;
            case 3:
                displayArray(arr, size);
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice! Try again.\n");
        }
    }
}
